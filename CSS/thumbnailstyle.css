#thumbnail-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* –ò—Å–ø–æ–ª—å–∑—É–µ–º auto-fit */
  grid-auto-flow: dense; /* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–µ –º–µ—Å—Ç–∞ */
  gap: 50px;
  box-sizing: border-box;
  width: 85%;
  align-content: start;
  padding-bottom: 100px; /* –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É */
}


@keyframes slideInLeft {
  from {
    transform: translateX(-30px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.thumbnail {
  border-radius: 1em;
  overflow: hidden;
  position: relative;
  cursor: pointer;
  opacity: 1;
  transition: opacity 0.3s;
  background-color: #e0e0e0;
  width: 100%; /* Full width of grid item */
  padding-top: 75%; /* Makes the height equal to the width, keeping it square */
  position: relative; /* Contain absolutely positioned elements */
}

.thumbnail {
  position: relative;
  box-shadow: 0px 15px 30px rgba(0, 0, 0, 0.4); /* –¢–µ–Ω—å —Å–Ω–∏–∑—É */
  border-radius: 1em;
  overflow: hidden;
  position: relative;
  cursor: pointer;
  opacity: 1;
  transition: opacity 0.3s;
  background-color: #e0e0e0;
  width: 100%; /* Full width of grid item */
  padding-top: 75%; /* Makes the height equal to the width, keeping it square */
  position: relative; /* Contain absolutely positioned elements */
}


.thumbnail {
  position: relative;
  transition: transform 0.5s ease-out;
  transform-origin: center;
  will-change: transform;
}


.thumbnail:hover {
  transform: scale(1.05);
}

.thumbnail img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;
  object-position: center center;
}

.thumbnail-title {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
  color: white;
  font-size: 18px;
  opacity: 0;
  transition: opacity 0.5s;
  text-align: center;
  width: 100%;
  text-shadow: 2px 4px 6px rgba(0, 0, 0, 0.8); /* –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–Ω—å –∑–∞ —Ç–µ–∫—Å—Ç–æ–º */
}




.thumbnail:hover .thumbnail-title {
  opacity: 1;
  
}

.thumbnail:hover::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transition: opacity 0.5s;
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #1f1f1f);
  z-index: 1;
}

.overlay-icon {
  position: absolute;
  top: 10px;
  left: 10px;
  font-size: 14px;
  color: white;
  margin-right: 5px;
  opacity: 0;
  transition: opacity 0.5s;
  z-index: 2;
}

.thumbnail:hover .overlay-icon {
  opacity: 1;
  animation: slideInLeft 0.5s forwards;
}

.overlay-icon + .overlay-icon {
  left: 40px; /* Adjust spacing between icons */
}

.resize-buttons {
  position: fixed;
  bottom: 20px;
  right: 20px;
  display: flex;
  flex-direction: column;
  gap: 5px;
  z-index: 1000; /* Ensure they are above other elements */
}

.resize-button {
  background-color: #121212;
  color: white;
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  font-size: 20px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.3s, color 0.3s;
}

.resize-button:hover {
  background-color: #1f1f1f;
  color: #0080ff;
}

/* –î–ª—è –±–æ–ª—å—à–∏—Ö –ø—Ä–µ–≤—å—é <a> —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ */
.thumbnail-large-link {
  grid-column: span 2 !important;
  grid-row: span 2 !important;
}

/* üì± –¢–µ–ª–µ—Ñ–æ–Ω—ã: 1 –∫–æ–ª–æ–Ω–∫–∞, —É–±–∏—Ä–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –±–æ–ª—å—à–∏—Ö –ø—Ä–µ–≤—å—é */
@media (max-width: 767px) {
  #thumbnail-container {
    grid-template-columns: 1fr;
  }
  .thumbnail-large,
  .thumbnail-large-link {
    grid-column: span 1 !important; /* –ó–∞–Ω–∏–º–∞–µ—Ç –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É */
    grid-row: span 1 !important; /* –ó–∞–Ω–∏–º–∞–µ—Ç –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É */
    
  }
}

/* üì± –ü–ª–∞–Ω—à–µ—Ç—ã: 2 –∫–æ–ª–æ–Ω–∫–∏ */
@media (min-width: 768px) and (max-width: 991px) {
  #thumbnail-container {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* üíª –ù–µ–±–æ–ª—å—à–∏–µ –Ω–æ—É—Ç–±—É–∫–∏: 3 –∫–æ–ª–æ–Ω–∫–∏ */
@media (min-width: 992px) and (max-width: 1199px) {
  #thumbnail-container {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* üñ•Ô∏è –î–µ—Å–∫—Ç–æ–ø—ã: 4 –∫–æ–ª–æ–Ω–∫–∏ */
@media (min-width: 1200px) {
  #thumbnail-container {
    grid-template-columns: repeat(4, 1fr);
    
  }
}



/* –î–µ–ª–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã <a> —Ç–æ–∂–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–ª—Å—è */
.thumbnail-link {
  display: block;
  width: 100%;
  height: auto;
  
}

.thumbnail-large-link {
  display: flex;
}
  

.thumbnail::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-image: linear-gradient(to bottom, rgba(255, 0, 0, 0), #1f1f1f);
    opacity: 0;
    transition: opacity 0.5s ease-in-out !important;
    border-radius: inherit;
    pointer-events: none;
}

.thumbnail:hover::before {
    opacity: 1;
}

  


/* –¶–≤–µ—Ç–∞ –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ */
.thumbnail.gradient-green:hover::before {
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #00b400);
}

.thumbnail.gradient-blue:hover::before {
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #0080ff);
}

.thumbnail.gradient-pink:hover::before {
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #ff4bff);
}

.thumbnail.gradient-orange:hover::before {
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #ff8000);
}





